// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SAMLProviderInitParameters struct {

	// The description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The metadata file which is Base64-encoded.
	// The file is provided by an IdP that supports Security Assertion Markup Language (SAML) 2.0.
	EncodedsamlMetadataDocument *string `json:"encodedsamlMetadataDocument,omitempty" tf:"encodedsaml_metadata_document,omitempty"`

	// The name of the IdP.  The name can be up to 128 characters in length. The name can contain letters, digits, periods (.), hyphens (-), and underscores (). The name cannot start or end with periods (.), hyphens (-), or underscores ().
	SAMLProviderName *string `json:"samlProviderName,omitempty" tf:"saml_provider_name,omitempty"`
}

type SAMLProviderObservation struct {

	// The identity provider's ARN.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// The description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The metadata file which is Base64-encoded.
	// The file is provided by an IdP that supports Security Assertion Markup Language (SAML) 2.0.
	EncodedsamlMetadataDocument *string `json:"encodedsamlMetadataDocument,omitempty" tf:"encodedsaml_metadata_document,omitempty"`

	// The ID of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the IdP.  The name can be up to 128 characters in length. The name can contain letters, digits, periods (.), hyphens (-), and underscores (). The name cannot start or end with periods (.), hyphens (-), or underscores ().
	SAMLProviderName *string `json:"samlProviderName,omitempty" tf:"saml_provider_name,omitempty"`

	// Update time.
	UpdateDate *string `json:"updateDate,omitempty" tf:"update_date,omitempty"`
}

type SAMLProviderParameters struct {

	// The description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The metadata file which is Base64-encoded.
	// The file is provided by an IdP that supports Security Assertion Markup Language (SAML) 2.0.
	// +kubebuilder:validation:Optional
	EncodedsamlMetadataDocument *string `json:"encodedsamlMetadataDocument,omitempty" tf:"encodedsaml_metadata_document,omitempty"`

	// The name of the IdP.  The name can be up to 128 characters in length. The name can contain letters, digits, periods (.), hyphens (-), and underscores (). The name cannot start or end with periods (.), hyphens (-), or underscores ().
	// +kubebuilder:validation:Optional
	SAMLProviderName *string `json:"samlProviderName,omitempty" tf:"saml_provider_name,omitempty"`
}

// SAMLProviderSpec defines the desired state of SAMLProvider
type SAMLProviderSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SAMLProviderParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SAMLProviderInitParameters `json:"initProvider,omitempty"`
}

// SAMLProviderStatus defines the observed state of SAMLProvider.
type SAMLProviderStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SAMLProviderObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SAMLProvider is the Schema for the SAMLProviders API. Provides a Alicloud RAM Saml Provider resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alibabacloud}
type SAMLProvider struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.encodedsamlMetadataDocument) || (has(self.initProvider) && has(self.initProvider.encodedsamlMetadataDocument))",message="spec.forProvider.encodedsamlMetadataDocument is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.samlProviderName) || (has(self.initProvider) && has(self.initProvider.samlProviderName))",message="spec.forProvider.samlProviderName is a required parameter"
	Spec   SAMLProviderSpec   `json:"spec"`
	Status SAMLProviderStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SAMLProviderList contains a list of SAMLProviders
type SAMLProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SAMLProvider `json:"items"`
}

// Repository type metadata.
var (
	SAMLProvider_Kind             = "SAMLProvider"
	SAMLProvider_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SAMLProvider_Kind}.String()
	SAMLProvider_KindAPIVersion   = SAMLProvider_Kind + "." + CRDGroupVersion.String()
	SAMLProvider_GroupVersionKind = CRDGroupVersion.WithKind(SAMLProvider_Kind)
)

func init() {
	SchemeBuilder.Register(&SAMLProvider{}, &SAMLProviderList{})
}
