// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InstanceInitParameters struct {

	// Alidns security level. Valid values: no, basic, advanced.
	DNSSecurity *string `json:"dnsSecurity,omitempty" tf:"dns_security,omitempty"`

	// Number of domain names bound.
	DomainNumbers *string `json:"domainNumbers,omitempty" tf:"domain_numbers,omitempty"`

	// The billing method of the Alidns instance. Valid values: Subscription. Default to Subscription.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal, default to ManualRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Paid package version. Valid values: version_personal, version_enterprise_basic, version_enterprise_advanced.
	VersionCode *string `json:"versionCode,omitempty" tf:"version_code,omitempty"`
}

type InstanceObservation struct {

	// Alidns security level. Valid values: no, basic, advanced.
	DNSSecurity *string `json:"dnsSecurity,omitempty" tf:"dns_security,omitempty"`

	// Number of domain names bound.
	DomainNumbers *string `json:"domainNumbers,omitempty" tf:"domain_numbers,omitempty"`

	// ID of the Alidns instance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The billing method of the Alidns instance. Valid values: Subscription. Default to Subscription.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal, default to ManualRenewal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Paid package version. Valid values: version_personal, version_enterprise_basic, version_enterprise_advanced.
	VersionCode *string `json:"versionCode,omitempty" tf:"version_code,omitempty"`

	// Paid package version name.
	VersionName *string `json:"versionName,omitempty" tf:"version_name,omitempty"`
}

type InstanceParameters struct {

	// Alidns security level. Valid values: no, basic, advanced.
	// +kubebuilder:validation:Optional
	DNSSecurity *string `json:"dnsSecurity,omitempty" tf:"dns_security,omitempty"`

	// Number of domain names bound.
	// +kubebuilder:validation:Optional
	DomainNumbers *string `json:"domainNumbers,omitempty" tf:"domain_numbers,omitempty"`

	// The billing method of the Alidns instance. Valid values: Subscription. Default to Subscription.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// Creating a pre-paid instance, it must be set, the unit is month, please enter an integer multiple of 12 for annually paid products.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Automatic renewal period, the unit is month. When setting RenewalStatus to AutoRenewal, it must be set.
	// +kubebuilder:validation:Optional
	RenewPeriod *float64 `json:"renewPeriod,omitempty" tf:"renew_period,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal, ManualRenewal, default to ManualRenewal.
	// +kubebuilder:validation:Optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Paid package version. Valid values: version_personal, version_enterprise_basic, version_enterprise_advanced.
	// +kubebuilder:validation:Optional
	VersionCode *string `json:"versionCode,omitempty" tf:"version_code,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider InstanceInitParameters `json:"initProvider,omitempty"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Instance is the Schema for the Instances API. Provides a Alicloud Alidns Instance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dnsSecurity) || (has(self.initProvider) && has(self.initProvider.dnsSecurity))",message="spec.forProvider.dnsSecurity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.domainNumbers) || (has(self.initProvider) && has(self.initProvider.domainNumbers))",message="spec.forProvider.domainNumbers is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.versionCode) || (has(self.initProvider) && has(self.initProvider.versionCode))",message="spec.forProvider.versionCode is a required parameter"
	Spec   InstanceSpec   `json:"spec"`
	Status InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
