// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EntryInitParameters struct {

	// The CIDR block in entry. This parameter is empty by default.  Take note of the following items:
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// The description in entry. The description must be 2 to 32 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type EntryObservation struct {

	// The CIDR block in entry. This parameter is empty by default.  Take note of the following items:
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// The description in entry. The description must be 2 to 32 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type EntryParameters struct {

	// The CIDR block in entry. This parameter is empty by default.  Take note of the following items:
	// +kubebuilder:validation:Optional
	Cidr *string `json:"cidr,omitempty" tf:"cidr,omitempty"`

	// The description in entry. The description must be 2 to 32 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`
}

type PrefixListInitParameters struct {

	// The IP address family. Valid values: IPv4,IPv6.
	AddressFamily *string `json:"addressFamily,omitempty" tf:"address_family,omitempty"`

	// The description of the prefix list. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Entry. The details see Block entry.
	Entry []EntryInitParameters `json:"entry,omitempty" tf:"entry,omitempty"`

	// The maximum number of entries that the prefix list can contain.  Valid values: 1 to 200.
	MaxEntries *float64 `json:"maxEntries,omitempty" tf:"max_entries,omitempty"`

	// The name of the prefix. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http://, https://, com.aliyun, or com.alibabacloud. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	PrefixListName *string `json:"prefixListName,omitempty" tf:"prefix_list_name,omitempty"`
}

type PrefixListObservation struct {

	// The IP address family. Valid values: IPv4,IPv6.
	AddressFamily *string `json:"addressFamily,omitempty" tf:"address_family,omitempty"`

	// The description of the prefix list. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Entry. The details see Block entry.
	Entry []EntryObservation `json:"entry,omitempty" tf:"entry,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The maximum number of entries that the prefix list can contain.  Valid values: 1 to 200.
	MaxEntries *float64 `json:"maxEntries,omitempty" tf:"max_entries,omitempty"`

	// The name of the prefix. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http://, https://, com.aliyun, or com.alibabacloud. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	PrefixListName *string `json:"prefixListName,omitempty" tf:"prefix_list_name,omitempty"`
}

type PrefixListParameters struct {

	// The IP address family. Valid values: IPv4,IPv6.
	// +kubebuilder:validation:Optional
	AddressFamily *string `json:"addressFamily,omitempty" tf:"address_family,omitempty"`

	// The description of the prefix list. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Entry. The details see Block entry.
	// +kubebuilder:validation:Optional
	Entry []EntryParameters `json:"entry,omitempty" tf:"entry,omitempty"`

	// The maximum number of entries that the prefix list can contain.  Valid values: 1 to 200.
	// +kubebuilder:validation:Optional
	MaxEntries *float64 `json:"maxEntries,omitempty" tf:"max_entries,omitempty"`

	// The name of the prefix. The name must be 2 to 128 characters in length. It must start with a letter and cannot start with http://, https://, com.aliyun, or com.alibabacloud. It can contain letters, digits, colons (:), underscores (_), periods (.), and hyphens (-).
	// +kubebuilder:validation:Optional
	PrefixListName *string `json:"prefixListName,omitempty" tf:"prefix_list_name,omitempty"`
}

// PrefixListSpec defines the desired state of PrefixList
type PrefixListSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrefixListParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrefixListInitParameters `json:"initProvider,omitempty"`
}

// PrefixListStatus defines the observed state of PrefixList.
type PrefixListStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrefixListObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrefixList is the Schema for the PrefixLists API. Provides a Alicloud ECS Prefix List resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type PrefixList struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.addressFamily) || (has(self.initProvider) && has(self.initProvider.addressFamily))",message="spec.forProvider.addressFamily is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.entry) || (has(self.initProvider) && has(self.initProvider.entry))",message="spec.forProvider.entry is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxEntries) || (has(self.initProvider) && has(self.initProvider.maxEntries))",message="spec.forProvider.maxEntries is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.prefixListName) || (has(self.initProvider) && has(self.initProvider.prefixListName))",message="spec.forProvider.prefixListName is a required parameter"
	Spec   PrefixListSpec   `json:"spec"`
	Status PrefixListStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrefixListList contains a list of PrefixLists
type PrefixListList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrefixList `json:"items"`
}

// Repository type metadata.
var (
	PrefixList_Kind             = "PrefixList"
	PrefixList_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrefixList_Kind}.String()
	PrefixList_KindAPIVersion   = PrefixList_Kind + "." + CRDGroupVersion.String()
	PrefixList_GroupVersionKind = CRDGroupVersion.WithKind(PrefixList_Kind)
)

func init() {
	SchemeBuilder.Register(&PrefixList{}, &PrefixListList{})
}
