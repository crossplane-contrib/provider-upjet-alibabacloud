// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ElasticityAssuranceInitParameters struct {

	// (ForceNew,Optional) The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
	AssuranceTimes *string `json:"assuranceTimes,omitempty" tf:"assurance_times,omitempty"`

	// Description of flexible guarantee service.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000.
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// (ForceNew,Required) Instance type. Currently, only one instance type is supported.
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// (ForceNew,Optional,Computed) The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
	PrivatePoolOptionsMatchCriteria *string `json:"privatePoolOptionsMatchCriteria,omitempty" tf:"private_pool_options_match_criteria,omitempty"`

	// The name of the flexible protection service.
	PrivatePoolOptionsName *string `json:"privatePoolOptionsName,omitempty" tf:"private_pool_options_name,omitempty"`

	// (ForceNew,Optional) The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// (ForceNew,Optional) Flexible guarantee service effective time.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The tag key-value pair information bound by the elastic guarantee service.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (ForceNew,Required) The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type ElasticityAssuranceObservation struct {

	// (ForceNew,Optional) The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
	AssuranceTimes *string `json:"assuranceTimes,omitempty" tf:"assurance_times,omitempty"`

	// Description of flexible guarantee service.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The first ID of the resource
	ElasticityAssuranceID *string `json:"elasticityAssuranceId,omitempty" tf:"elasticity_assurance_id,omitempty"`

	// Flexible guarantee service failure time.
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// The key of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000.
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
	InstanceChargeType *string `json:"instanceChargeType,omitempty" tf:"instance_charge_type,omitempty"`

	// (ForceNew,Required) Instance type. Currently, only one instance type is supported.
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// (ForceNew,Optional,Computed) The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
	PrivatePoolOptionsMatchCriteria *string `json:"privatePoolOptionsMatchCriteria,omitempty" tf:"private_pool_options_match_criteria,omitempty"`

	// The name of the flexible protection service.
	PrivatePoolOptionsName *string `json:"privatePoolOptionsName,omitempty" tf:"private_pool_options_name,omitempty"`

	// (ForceNew,Optional) The ID of the resource group.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// (ForceNew,Optional) Flexible guarantee service effective time.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
	StartTimeType *string `json:"startTimeType,omitempty" tf:"start_time_type,omitempty"`

	// The status of flexible guarantee services. Possible values:-Preparing: in preparation.-Prepared: to take effect.-Active: in effect.-Released: Released.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The tag key-value pair information bound by the elastic guarantee service.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// This parameter is not yet available.
	UsedAssuranceTimes *float64 `json:"usedAssuranceTimes,omitempty" tf:"used_assurance_times,omitempty"`

	// (ForceNew,Required) The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type ElasticityAssuranceParameters struct {

	// (ForceNew,Optional) The total number of times that the elasticity assurance can be applied. Set the value to Unlimited. This value indicates that the elasticity assurance can be applied an unlimited number of times within its effective duration. Default value: Unlimited.
	// +kubebuilder:validation:Optional
	AssuranceTimes *string `json:"assuranceTimes,omitempty" tf:"assurance_times,omitempty"`

	// Description of flexible guarantee service.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The total number of instances for which to reserve the capacity of an instance type. Valid values: 1 to 1000.
	// +kubebuilder:validation:Optional
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// (ForceNew,Required) Instance type. Currently, only one instance type is supported.
	// +kubebuilder:validation:Optional
	InstanceType []*string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Length of purchase. The unit of duration is determined by the 'period_unit' parameter. Default value: 1.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// parameter is set to Month, the valid values are 1, 2, 3, 4, 5, 6, 7, 8, and 9.
	// +kubebuilder:validation:Optional
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// (ForceNew,Optional,Computed) The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
	// +kubebuilder:validation:Optional
	PrivatePoolOptionsMatchCriteria *string `json:"privatePoolOptionsMatchCriteria,omitempty" tf:"private_pool_options_match_criteria,omitempty"`

	// The name of the flexible protection service.
	// +kubebuilder:validation:Optional
	PrivatePoolOptionsName *string `json:"privatePoolOptionsName,omitempty" tf:"private_pool_options_name,omitempty"`

	// (ForceNew,Optional) The ID of the resource group.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// (ForceNew,Optional) Flexible guarantee service effective time.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The tag key-value pair information bound by the elastic guarantee service.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (ForceNew,Required) The zone ID of the region to which the elastic Protection Service belongs. Currently, only the creation of flexible protection services in one available area is supported.
	// +kubebuilder:validation:Optional
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

// ElasticityAssuranceSpec defines the desired state of ElasticityAssurance
type ElasticityAssuranceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ElasticityAssuranceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ElasticityAssuranceInitParameters `json:"initProvider,omitempty"`
}

// ElasticityAssuranceStatus defines the observed state of ElasticityAssurance.
type ElasticityAssuranceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ElasticityAssuranceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ElasticityAssurance is the Schema for the ElasticityAssurances API. Provides a Alicloud Ecs Elasticity Assurance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type ElasticityAssurance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceAmount) || (has(self.initProvider) && has(self.initProvider.instanceAmount))",message="spec.forProvider.instanceAmount is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceType) || (has(self.initProvider) && has(self.initProvider.instanceType))",message="spec.forProvider.instanceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneIds) || (has(self.initProvider) && has(self.initProvider.zoneIds))",message="spec.forProvider.zoneIds is a required parameter"
	Spec   ElasticityAssuranceSpec   `json:"spec"`
	Status ElasticityAssuranceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ElasticityAssuranceList contains a list of ElasticityAssurances
type ElasticityAssuranceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ElasticityAssurance `json:"items"`
}

// Repository type metadata.
var (
	ElasticityAssurance_Kind             = "ElasticityAssurance"
	ElasticityAssurance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ElasticityAssurance_Kind}.String()
	ElasticityAssurance_KindAPIVersion   = ElasticityAssurance_Kind + "." + CRDGroupVersion.String()
	ElasticityAssurance_GroupVersionKind = CRDGroupVersion.WithKind(ElasticityAssurance_Kind)
)

func init() {
	SchemeBuilder.Register(&ElasticityAssurance{}, &ElasticityAssuranceList{})
}
