// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OperationLocksInitParameters struct {
}

type OperationLocksObservation struct {

	// The reason why the reserved instance was locked.
	LockReason *string `json:"lockReason,omitempty" tf:"lock_reason,omitempty"`
}

type OperationLocksParameters struct {
}

type ReservedInstanceInitParameters struct {

	// The auto-renewal term of the reserved instance. This parameter takes effect only when AutoRenew is set to true. Valid values: 1, 12, 36, and 60. Default value when period_unit is set to Month: 1 Default value when period_unit is set to Year: 12
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Description of the RI. 2 to 256 English or Chinese characters. It cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Number of instances allocated to an RI (An RI is a coupon that includes one or more allocated instances.).
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type of the RI. For more information, see Instance type families.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Payment type of the RI. Default value: All Upfront. Valid values:
	OfferingType *string `json:"offeringType,omitempty" tf:"offering_type,omitempty"`

	// The validity period of the reserved instance. Default value: 1. NOTE: From version 1.183.0, period can be set to 5, when period_unit is Year.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// is Year, Valid values: 1, 3, 5.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// The operating system type of the image used by the instance. Optional values: Windows, Linux. Default is Linux.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal,Normal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Name of the RI. The name must be a string of 2 to 128 characters in length and can contain letters, numbers, colons (:), underscores (_), and hyphens. It must start with a letter. It cannot start with http:// or https://.
	ReservedInstanceName *string `json:"reservedInstanceName,omitempty" tf:"reserved_instance_name,omitempty"`

	// Resource group ID.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Scope of the RI. Optional values: Region: region-level, Zone: zone-level. Default is Region.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// A mapping of tags to assign to the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the zone to which the RI belongs. When Scope is set to Zone, this parameter is required. For information about the zone list, see DescribeZones.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ReservedInstanceObservation struct {

	// Indicates the sharing status of the reserved instance when the AllocationType parameter is set to Shared. Valid values: allocated: The reserved instance is allocated to another account. beAllocated: The reserved instance is allocated by another account.
	AllocationStatus *string `json:"allocationStatus,omitempty" tf:"allocation_status,omitempty"`

	// The auto-renewal term of the reserved instance. This parameter takes effect only when AutoRenew is set to true. Valid values: 1, 12, 36, and 60. Default value when period_unit is set to Month: 1 Default value when period_unit is set to Year: 12
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// The time when the reserved instance was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// Description of the RI. 2 to 256 English or Chinese characters. It cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The time when the reserved instance expires.
	ExpiredTime *string `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// ID of the ReservedInstance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Number of instances allocated to an RI (An RI is a coupon that includes one or more allocated instances.).
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type of the RI. For more information, see Instance type families.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Payment type of the RI. Default value: All Upfront. Valid values:
	OfferingType *string `json:"offeringType,omitempty" tf:"offering_type,omitempty"`

	// Details about the lock status of the reserved instance.
	OperationLocks []OperationLocksObservation `json:"operationLocks,omitempty" tf:"operation_locks,omitempty"`

	// The validity period of the reserved instance. Default value: 1. NOTE: From version 1.183.0, period can be set to 5, when period_unit is Year.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// is Year, Valid values: 1, 3, 5.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// The operating system type of the image used by the instance. Optional values: Windows, Linux. Default is Linux.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal,Normal.
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Name of the RI. The name must be a string of 2 to 128 characters in length and can contain letters, numbers, colons (:), underscores (_), and hyphens. It must start with a letter. It cannot start with http:// or https://.
	ReservedInstanceName *string `json:"reservedInstanceName,omitempty" tf:"reserved_instance_name,omitempty"`

	// Resource group ID.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Scope of the RI. Optional values: Region: region-level, Zone: zone-level. Default is Region.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// The time when the reserved instance took effect.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The status of the reserved instance.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// A mapping of tags to assign to the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the zone to which the RI belongs. When Scope is set to Zone, this parameter is required. For information about the zone list, see DescribeZones.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type ReservedInstanceParameters struct {

	// The auto-renewal term of the reserved instance. This parameter takes effect only when AutoRenew is set to true. Valid values: 1, 12, 36, and 60. Default value when period_unit is set to Month: 1 Default value when period_unit is set to Year: 12
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// Description of the RI. 2 to 256 English or Chinese characters. It cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Number of instances allocated to an RI (An RI is a coupon that includes one or more allocated instances.).
	// +kubebuilder:validation:Optional
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type of the RI. For more information, see Instance type families.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// Payment type of the RI. Default value: All Upfront. Valid values:
	// +kubebuilder:validation:Optional
	OfferingType *string `json:"offeringType,omitempty" tf:"offering_type,omitempty"`

	// The validity period of the reserved instance. Default value: 1. NOTE: From version 1.183.0, period can be set to 5, when period_unit is Year.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// is Year, Valid values: 1, 3, 5.
	// +kubebuilder:validation:Optional
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// The operating system type of the image used by the instance. Optional values: Windows, Linux. Default is Linux.
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// Automatic renewal status. Valid values: AutoRenewal,Normal.
	// +kubebuilder:validation:Optional
	RenewalStatus *string `json:"renewalStatus,omitempty" tf:"renewal_status,omitempty"`

	// Name of the RI. The name must be a string of 2 to 128 characters in length and can contain letters, numbers, colons (:), underscores (_), and hyphens. It must start with a letter. It cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	ReservedInstanceName *string `json:"reservedInstanceName,omitempty" tf:"reserved_instance_name,omitempty"`

	// Resource group ID.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// Scope of the RI. Optional values: Region: region-level, Zone: zone-level. Default is Region.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// ID of the zone to which the RI belongs. When Scope is set to Zone, this parameter is required. For information about the zone list, see DescribeZones.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

// ReservedInstanceSpec defines the desired state of ReservedInstance
type ReservedInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReservedInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ReservedInstanceInitParameters `json:"initProvider,omitempty"`
}

// ReservedInstanceStatus defines the observed state of ReservedInstance.
type ReservedInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReservedInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ReservedInstance is the Schema for the ReservedInstances API. Provides an ECS Reserved Instance resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type ReservedInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceType) || (has(self.initProvider) && has(self.initProvider.instanceType))",message="spec.forProvider.instanceType is a required parameter"
	Spec   ReservedInstanceSpec   `json:"spec"`
	Status ReservedInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReservedInstanceList contains a list of ReservedInstances
type ReservedInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReservedInstance `json:"items"`
}

// Repository type metadata.
var (
	ReservedInstance_Kind             = "ReservedInstance"
	ReservedInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReservedInstance_Kind}.String()
	ReservedInstance_KindAPIVersion   = ReservedInstance_Kind + "." + CRDGroupVersion.String()
	ReservedInstance_GroupVersionKind = CRDGroupVersion.WithKind(ReservedInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&ReservedInstance{}, &ReservedInstanceList{})
}
