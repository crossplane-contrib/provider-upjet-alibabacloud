// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DedicatedHostInitParameters struct {

	// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: Migrate, Stop.
	ActionOnMaintenance *string `json:"actionOnMaintenance,omitempty" tf:"action_on_maintenance,omitempty"`

	// Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: on, off. Default: on.
	AutoPlacement *string `json:"autoPlacement,omitempty" tf:"auto_placement,omitempty"`

	// The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
	AutoReleaseTime *string `json:"autoReleaseTime,omitempty" tf:"auto_release_time,omitempty"`

	// Specifies whether to automatically renew the subscription dedicated host.
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// The auto-renewal period of the dedicated host. Unit: months. Valid values: 1, 2, 3, 6, and 12. takes effect and is required only when the AutoRenew parameter is set to true.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
	CPUOverCommitRatio *float64 `json:"cpuOverCommitRatio,omitempty" tf:"cpu_over_commit_ratio,omitempty"`

	// The dedicated host cluster ID to which the dedicated host belongs.
	DedicatedHostClusterID *string `json:"dedicatedHostClusterId,omitempty" tf:"dedicated_host_cluster_id,omitempty"`

	// The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
	DedicatedHostName *string `json:"dedicatedHostName,omitempty" tf:"dedicated_host_name,omitempty"`

	// The type of the dedicated host. You can call the DescribeDedicatedHostTypes operation to obtain the most recent list of dedicated host types.
	DedicatedHostType *string `json:"dedicatedHostType,omitempty" tf:"dedicated_host_type,omitempty"`

	// The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: false.
	DetailFee *bool `json:"detailFee,omitempty" tf:"detail_fee,omitempty"`

	// Specifies whether to only validate the request. Default: false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
	ExpiredTime *string `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// Specify the minimum purchase quantity of a dedicated host.
	MinQuantity *float64 `json:"minQuantity,omitempty" tf:"min_quantity,omitempty"`

	// dedicated host network parameters. contains the following attributes:
	NetworkAttributes []NetworkAttributesInitParameters `json:"networkAttributes,omitempty" tf:"network_attributes,omitempty"`

	// The billing method of the dedicated host. Valid values: PrePaid, PostPaid. Default: PostPaid.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The ID of the resource group to which the dedicated host belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The unit of the subscription period of the dedicated host.
	SaleCycle *string `json:"saleCycle,omitempty" tf:"sale_cycle,omitempty"`

	// A mapping of tags to assign to the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type DedicatedHostObservation struct {

	// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: Migrate, Stop.
	ActionOnMaintenance *string `json:"actionOnMaintenance,omitempty" tf:"action_on_maintenance,omitempty"`

	// Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: on, off. Default: on.
	AutoPlacement *string `json:"autoPlacement,omitempty" tf:"auto_placement,omitempty"`

	// The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
	AutoReleaseTime *string `json:"autoReleaseTime,omitempty" tf:"auto_release_time,omitempty"`

	// Specifies whether to automatically renew the subscription dedicated host.
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// The auto-renewal period of the dedicated host. Unit: months. Valid values: 1, 2, 3, 6, and 12. takes effect and is required only when the AutoRenew parameter is set to true.
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
	CPUOverCommitRatio *float64 `json:"cpuOverCommitRatio,omitempty" tf:"cpu_over_commit_ratio,omitempty"`

	// The dedicated host cluster ID to which the dedicated host belongs.
	DedicatedHostClusterID *string `json:"dedicatedHostClusterId,omitempty" tf:"dedicated_host_cluster_id,omitempty"`

	// The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
	DedicatedHostName *string `json:"dedicatedHostName,omitempty" tf:"dedicated_host_name,omitempty"`

	// The type of the dedicated host. You can call the DescribeDedicatedHostTypes operation to obtain the most recent list of dedicated host types.
	DedicatedHostType *string `json:"dedicatedHostType,omitempty" tf:"dedicated_host_type,omitempty"`

	// The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: false.
	DetailFee *bool `json:"detailFee,omitempty" tf:"detail_fee,omitempty"`

	// Specifies whether to only validate the request. Default: false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
	ExpiredTime *string `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// The ID of the dedicated host.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specify the minimum purchase quantity of a dedicated host.
	MinQuantity *float64 `json:"minQuantity,omitempty" tf:"min_quantity,omitempty"`

	// dedicated host network parameters. contains the following attributes:
	NetworkAttributes []NetworkAttributesObservation `json:"networkAttributes,omitempty" tf:"network_attributes,omitempty"`

	// The billing method of the dedicated host. Valid values: PrePaid, PostPaid. Default: PostPaid.
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The ID of the resource group to which the dedicated host belongs.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The unit of the subscription period of the dedicated host.
	SaleCycle *string `json:"saleCycle,omitempty" tf:"sale_cycle,omitempty"`

	// The status of the dedicated host.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// A mapping of tags to assign to the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type DedicatedHostParameters struct {

	// The policy used to migrate the instances from the dedicated host when the dedicated host fails or needs to be repaired online. Valid values: Migrate, Stop.
	// +kubebuilder:validation:Optional
	ActionOnMaintenance *string `json:"actionOnMaintenance,omitempty" tf:"action_on_maintenance,omitempty"`

	// Specifies whether to add the dedicated host to the resource pool for automatic deployment. If you do not specify the DedicatedHostId parameter when you create an instance on a dedicated host, Alibaba Cloud automatically selects a dedicated host from the resource pool to host the instance. Valid values: on, off. Default: on.
	// +kubebuilder:validation:Optional
	AutoPlacement *string `json:"autoPlacement,omitempty" tf:"auto_placement,omitempty"`

	// The automatic release time of the dedicated host. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC+0.
	// +kubebuilder:validation:Optional
	AutoReleaseTime *string `json:"autoReleaseTime,omitempty" tf:"auto_release_time,omitempty"`

	// Specifies whether to automatically renew the subscription dedicated host.
	// +kubebuilder:validation:Optional
	AutoRenew *bool `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// The auto-renewal period of the dedicated host. Unit: months. Valid values: 1, 2, 3, 6, and 12. takes effect and is required only when the AutoRenew parameter is set to true.
	// +kubebuilder:validation:Optional
	AutoRenewPeriod *float64 `json:"autoRenewPeriod,omitempty" tf:"auto_renew_period,omitempty"`

	// CPU oversold ratio. Only custom specifications g6s, c6s, r6s support setting the CPU oversold ratio.
	// +kubebuilder:validation:Optional
	CPUOverCommitRatio *float64 `json:"cpuOverCommitRatio,omitempty" tf:"cpu_over_commit_ratio,omitempty"`

	// The dedicated host cluster ID to which the dedicated host belongs.
	// +kubebuilder:validation:Optional
	DedicatedHostClusterID *string `json:"dedicatedHostClusterId,omitempty" tf:"dedicated_host_cluster_id,omitempty"`

	// The name of the dedicated host. The name must be 2 to 128 characters in length. It must start with a letter but cannot start with http:// or https://. It can contain letters, digits, colons (:), underscores (_), and hyphens (-).
	// +kubebuilder:validation:Optional
	DedicatedHostName *string `json:"dedicatedHostName,omitempty" tf:"dedicated_host_name,omitempty"`

	// The type of the dedicated host. You can call the DescribeDedicatedHostTypes operation to obtain the most recent list of dedicated host types.
	// +kubebuilder:validation:Optional
	DedicatedHostType *string `json:"dedicatedHostType,omitempty" tf:"dedicated_host_type,omitempty"`

	// The description of the dedicated host. The description must be 2 to 256 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to return the billing details of the order when the billing method is changed from subscription to pay-as-you-go. Default: false.
	// +kubebuilder:validation:Optional
	DetailFee *bool `json:"detailFee,omitempty" tf:"detail_fee,omitempty"`

	// Specifies whether to only validate the request. Default: false.
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// The subscription period of the dedicated host. The Period parameter takes effect and is required only when the ChargeType parameter is set to PrePaid.
	// +kubebuilder:validation:Optional
	ExpiredTime *string `json:"expiredTime,omitempty" tf:"expired_time,omitempty"`

	// Specify the minimum purchase quantity of a dedicated host.
	// +kubebuilder:validation:Optional
	MinQuantity *float64 `json:"minQuantity,omitempty" tf:"min_quantity,omitempty"`

	// dedicated host network parameters. contains the following attributes:
	// +kubebuilder:validation:Optional
	NetworkAttributes []NetworkAttributesParameters `json:"networkAttributes,omitempty" tf:"network_attributes,omitempty"`

	// The billing method of the dedicated host. Valid values: PrePaid, PostPaid. Default: PostPaid.
	// +kubebuilder:validation:Optional
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// The ID of the resource group to which the dedicated host belongs.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The unit of the subscription period of the dedicated host.
	// +kubebuilder:validation:Optional
	SaleCycle *string `json:"saleCycle,omitempty" tf:"sale_cycle,omitempty"`

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The zone ID of the dedicated host. This parameter is empty by default. If you do not specify this parameter, the system automatically selects a zone.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type NetworkAttributesInitParameters struct {

	// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
	SlbUDPTimeout *float64 `json:"slbUdpTimeout,omitempty" tf:"slb_udp_timeout,omitempty"`

	// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
	UDPTimeout *float64 `json:"udpTimeout,omitempty" tf:"udp_timeout,omitempty"`
}

type NetworkAttributesObservation struct {

	// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
	SlbUDPTimeout *float64 `json:"slbUdpTimeout,omitempty" tf:"slb_udp_timeout,omitempty"`

	// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
	UDPTimeout *float64 `json:"udpTimeout,omitempty" tf:"udp_timeout,omitempty"`
}

type NetworkAttributesParameters struct {

	// The timeout period for a UDP session between Server Load Balancer (SLB) and the dedicated host. Unit: seconds. Valid values: 15 to 310.
	// +kubebuilder:validation:Optional
	SlbUDPTimeout *float64 `json:"slbUdpTimeout,omitempty" tf:"slb_udp_timeout,omitempty"`

	// The timeout period for a UDP session between a user and an Alibaba Cloud service on the dedicated host. Unit: seconds. Valid values: 15 to 310.
	// +kubebuilder:validation:Optional
	UDPTimeout *float64 `json:"udpTimeout,omitempty" tf:"udp_timeout,omitempty"`
}

// DedicatedHostSpec defines the desired state of DedicatedHost
type DedicatedHostSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DedicatedHostParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DedicatedHostInitParameters `json:"initProvider,omitempty"`
}

// DedicatedHostStatus defines the observed state of DedicatedHost.
type DedicatedHostStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DedicatedHostObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DedicatedHost is the Schema for the DedicatedHosts API. Provides a Alibaba Cloud ecs dedicated host resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type DedicatedHost struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dedicatedHostType) || (has(self.initProvider) && has(self.initProvider.dedicatedHostType))",message="spec.forProvider.dedicatedHostType is a required parameter"
	Spec   DedicatedHostSpec   `json:"spec"`
	Status DedicatedHostStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DedicatedHostList contains a list of DedicatedHosts
type DedicatedHostList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DedicatedHost `json:"items"`
}

// Repository type metadata.
var (
	DedicatedHost_Kind             = "DedicatedHost"
	DedicatedHost_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DedicatedHost_Kind}.String()
	DedicatedHost_KindAPIVersion   = DedicatedHost_Kind + "." + CRDGroupVersion.String()
	DedicatedHost_GroupVersionKind = CRDGroupVersion.WithKind(DedicatedHost_Kind)
)

func init() {
	SchemeBuilder.Register(&DedicatedHost{}, &DedicatedHostList{})
}
