// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActivationInitParameters struct {

	// The description of the activation code. The description can be 1 to 100 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The IP addresses of hosts that are allowed to use the activation code. The value can be IPv4 addresses, IPv6 addresses, or CIDR blocks.
	IPAddressRange *string `json:"ipAddressRange,omitempty" tf:"ip_address_range,omitempty"`

	// The maximum number of times that the activation code can be used to register managed instances. Valid values: 1 to 1000. Default value: 10.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The default instance name prefix. The instance name prefix must be 1 to 50 characters in length. It must start with a letter and cannot start with http:// or https://. The instance name prefix can contain only letters, digits, periods (.), underscores (_), hyphens (-), and colons (:).
	// - If you use the activation code created by the CreateActivation operation to register managed instances, the instances are assigned sequential names that are prefixed by the value of this parameter. You can also specify a new instance name to override the assigned sequential name when you register a managed instance.
	// - If you specify InstanceName when you register a managed instance, an instance name in the format of <InstanceName>-<Number> is generated. The number of digits in the  value is determined by that in the InstanceCount value. Example: 001. If you do not specify InstanceName, the hostname (Hostname) is used as the instance name.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The validity period of the activation code. The activation code cannot be used to register new instances after the validity period expires. Unit: hours. Valid values: 1 to 24. Default value: 4.
	TimeToLiveInHours *float64 `json:"timeToLiveInHours,omitempty" tf:"time_to_live_in_hours,omitempty"`
}

type ActivationObservation struct {

	// The description of the activation code. The description can be 1 to 100 characters in length and cannot start with http:// or https://.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IP addresses of hosts that are allowed to use the activation code. The value can be IPv4 addresses, IPv6 addresses, or CIDR blocks.
	IPAddressRange *string `json:"ipAddressRange,omitempty" tf:"ip_address_range,omitempty"`

	// The maximum number of times that the activation code can be used to register managed instances. Valid values: 1 to 1000. Default value: 10.
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The default instance name prefix. The instance name prefix must be 1 to 50 characters in length. It must start with a letter and cannot start with http:// or https://. The instance name prefix can contain only letters, digits, periods (.), underscores (_), hyphens (-), and colons (:).
	// - If you use the activation code created by the CreateActivation operation to register managed instances, the instances are assigned sequential names that are prefixed by the value of this parameter. You can also specify a new instance name to override the assigned sequential name when you register a managed instance.
	// - If you specify InstanceName when you register a managed instance, an instance name in the format of <InstanceName>-<Number> is generated. The number of digits in the  value is determined by that in the InstanceCount value. Example: 001. If you do not specify InstanceName, the hostname (Hostname) is used as the instance name.
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The validity period of the activation code. The activation code cannot be used to register new instances after the validity period expires. Unit: hours. Valid values: 1 to 24. Default value: 4.
	TimeToLiveInHours *float64 `json:"timeToLiveInHours,omitempty" tf:"time_to_live_in_hours,omitempty"`
}

type ActivationParameters struct {

	// The description of the activation code. The description can be 1 to 100 characters in length and cannot start with http:// or https://.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The IP addresses of hosts that are allowed to use the activation code. The value can be IPv4 addresses, IPv6 addresses, or CIDR blocks.
	// +kubebuilder:validation:Optional
	IPAddressRange *string `json:"ipAddressRange,omitempty" tf:"ip_address_range,omitempty"`

	// The maximum number of times that the activation code can be used to register managed instances. Valid values: 1 to 1000. Default value: 10.
	// +kubebuilder:validation:Optional
	InstanceCount *float64 `json:"instanceCount,omitempty" tf:"instance_count,omitempty"`

	// The default instance name prefix. The instance name prefix must be 1 to 50 characters in length. It must start with a letter and cannot start with http:// or https://. The instance name prefix can contain only letters, digits, periods (.), underscores (_), hyphens (-), and colons (:).
	// - If you use the activation code created by the CreateActivation operation to register managed instances, the instances are assigned sequential names that are prefixed by the value of this parameter. You can also specify a new instance name to override the assigned sequential name when you register a managed instance.
	// - If you specify InstanceName when you register a managed instance, an instance name in the format of <InstanceName>-<Number> is generated. The number of digits in the  value is determined by that in the InstanceCount value. Example: 001. If you do not specify InstanceName, the hostname (Hostname) is used as the instance name.
	// +kubebuilder:validation:Optional
	InstanceName *string `json:"instanceName,omitempty" tf:"instance_name,omitempty"`

	// The validity period of the activation code. The activation code cannot be used to register new instances after the validity period expires. Unit: hours. Valid values: 1 to 24. Default value: 4.
	// +kubebuilder:validation:Optional
	TimeToLiveInHours *float64 `json:"timeToLiveInHours,omitempty" tf:"time_to_live_in_hours,omitempty"`
}

// ActivationSpec defines the desired state of Activation
type ActivationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ActivationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ActivationInitParameters `json:"initProvider,omitempty"`
}

// ActivationStatus defines the observed state of Activation.
type ActivationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ActivationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Activation is the Schema for the Activations API. Provides a Alicloud ECS Activation resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type Activation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ActivationSpec   `json:"spec"`
	Status            ActivationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ActivationList contains a list of Activations
type ActivationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Activation `json:"items"`
}

// Repository type metadata.
var (
	Activation_Kind             = "Activation"
	Activation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Activation_Kind}.String()
	Activation_KindAPIVersion   = Activation_Kind + "." + CRDGroupVersion.String()
	Activation_GroupVersionKind = CRDGroupVersion.WithKind(Activation_Kind)
)

func init() {
	SchemeBuilder.Register(&Activation{}, &ActivationList{})
}
