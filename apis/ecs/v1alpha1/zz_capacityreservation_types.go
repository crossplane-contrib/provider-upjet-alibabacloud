// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CapacityReservationInitParameters struct {

	// Capacity reservation service name.
	CapacityReservationName *string `json:"capacityReservationName,omitempty" tf:"capacity_reservation_name,omitempty"`

	// description of the capacity reservation instance.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to pre-check the API request. Valid values: true and false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
	EndTimeType *string `json:"endTimeType,omitempty" tf:"end_time_type,omitempty"`

	// The total number of instances that need to be reserved within the capacity reservation.
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// (ForceNew,Optional) The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	// platform of the capacity reservation, value range windows, linux.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (ForceNew,Optional) The resource group id.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The tag of the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (ForceNew,Required) The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type CapacityReservationObservation struct {

	// Capacity reservation service name.
	CapacityReservationName *string `json:"capacityReservationName,omitempty" tf:"capacity_reservation_name,omitempty"`

	// description of the capacity reservation instance.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to pre-check the API request. Valid values: true and false.
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
	EndTimeType *string `json:"endTimeType,omitempty" tf:"end_time_type,omitempty"`

	// The key of the resource supplied above.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The total number of instances that need to be reserved within the capacity reservation.
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// (ForceNew,Optional) The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	// The payment type of the resource
	PaymentType *string `json:"paymentType,omitempty" tf:"payment_type,omitempty"`

	// platform of the capacity reservation, value range windows, linux.
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (ForceNew,Optional) The resource group id.
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// time of the capacity reservation which become active.
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// The capacity is scheduled to take effect. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
	StartTimeType *string `json:"startTimeType,omitempty" tf:"start_time_type,omitempty"`

	// The status of the capacity reservation.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// The tag of the resource.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// This parameter is under test and is not yet open for use.
	TimeSlot *string `json:"timeSlot,omitempty" tf:"time_slot,omitempty"`

	// (ForceNew,Required) The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

type CapacityReservationParameters struct {

	// Capacity reservation service name.
	// +kubebuilder:validation:Optional
	CapacityReservationName *string `json:"capacityReservationName,omitempty" tf:"capacity_reservation_name,omitempty"`

	// description of the capacity reservation instance.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to pre-check the API request. Valid values: true and false.
	// +kubebuilder:validation:Optional
	DryRun *bool `json:"dryRun,omitempty" tf:"dry_run,omitempty"`

	// end time of the capacity reservation. the capacity reservation will be  released at the end time automatically if set. otherwise it will last until manually released
	// +kubebuilder:validation:Optional
	EndTime *string `json:"endTime,omitempty" tf:"end_time,omitempty"`

	// Release mode of capacity reservation service. Value range:Limited: release at specified time. The EndTime parameter must be specified at the same time.Unlimited: manual release. No time limit.
	// +kubebuilder:validation:Optional
	EndTimeType *string `json:"endTimeType,omitempty" tf:"end_time_type,omitempty"`

	// The total number of instances that need to be reserved within the capacity reservation.
	// +kubebuilder:validation:Optional
	InstanceAmount *float64 `json:"instanceAmount,omitempty" tf:"instance_amount,omitempty"`

	// Instance type. Currently, you can only set the capacity reservation service for one instance type.
	// +kubebuilder:validation:Optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type,omitempty"`

	// (ForceNew,Optional) The type of private resource pool generated after the capacity reservation service takes effect. Value range:Open: Open mode.Target: dedicated mode.Default value: Open
	// +kubebuilder:validation:Optional
	MatchCriteria *string `json:"matchCriteria,omitempty" tf:"match_criteria,omitempty"`

	// platform of the capacity reservation, value range windows, linux.
	// +kubebuilder:validation:Optional
	Platform *string `json:"platform,omitempty" tf:"platform,omitempty"`

	// (ForceNew,Optional) The resource group id.
	// +kubebuilder:validation:Optional
	ResourceGroupID *string `json:"resourceGroupId,omitempty" tf:"resource_group_id,omitempty"`

	// The tag of the resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// (ForceNew,Required) The ID of the zone in the region to which the capacity reservation service belongs. Currently, it is only supported to create a capacity reservation service in one zone.
	// +kubebuilder:validation:Optional
	ZoneIds []*string `json:"zoneIds,omitempty" tf:"zone_ids,omitempty"`
}

// CapacityReservationSpec defines the desired state of CapacityReservation
type CapacityReservationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CapacityReservationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CapacityReservationInitParameters `json:"initProvider,omitempty"`
}

// CapacityReservationStatus defines the observed state of CapacityReservation.
type CapacityReservationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CapacityReservationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CapacityReservation is the Schema for the CapacityReservations API. Provides a Alicloud Ecs Capacity Reservation resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,alicloud}
type CapacityReservation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceAmount) || (has(self.initProvider) && has(self.initProvider.instanceAmount))",message="spec.forProvider.instanceAmount is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceType) || (has(self.initProvider) && has(self.initProvider.instanceType))",message="spec.forProvider.instanceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.zoneIds) || (has(self.initProvider) && has(self.initProvider.zoneIds))",message="spec.forProvider.zoneIds is a required parameter"
	Spec   CapacityReservationSpec   `json:"spec"`
	Status CapacityReservationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CapacityReservationList contains a list of CapacityReservations
type CapacityReservationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CapacityReservation `json:"items"`
}

// Repository type metadata.
var (
	CapacityReservation_Kind             = "CapacityReservation"
	CapacityReservation_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CapacityReservation_Kind}.String()
	CapacityReservation_KindAPIVersion   = CapacityReservation_Kind + "." + CRDGroupVersion.String()
	CapacityReservation_GroupVersionKind = CRDGroupVersion.WithKind(CapacityReservation_Kind)
)

func init() {
	SchemeBuilder.Register(&CapacityReservation{}, &CapacityReservationList{})
}
