---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: autoprovisioninggroups.ecs.alibabacloud.crossplane.io
spec:
  group: ecs.alibabacloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - alicloud
    kind: AutoProvisioningGroup
    listKind: AutoProvisioningGroupList
    plural: autoprovisioninggroups
    singular: autoprovisioninggroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AutoProvisioningGroup is the Schema for the AutoProvisioningGroups
          API. Provides a ECS Auto Provisioning group resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AutoProvisioningGroupSpec defines the desired state of AutoProvisioningGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoProvisioningGroupName:
                    description: The name of the auto provisioning group to be created.
                      It must be 2 to 128 characters in length. It must start with
                      a letter but cannot start with http:// or https://. It can contain
                      letters, digits, colons (:), underscores (_), and hyphens (-)
                    type: string
                  autoProvisioningGroupType:
                    description: 'The type of the auto provisioning group. Valid values:request
                      and maintain,Default value: maintain.'
                    type: string
                  defaultTargetCapacityType:
                    description: 'The type of supplemental instances. When the total
                      value of PayAsYouGoTargetCapacity and SpotTargetCapacity is
                      smaller than the value of TotalTargetCapacity, the auto provisioning
                      group will create instances of the specified type to meet the
                      capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go
                      instances; Spot: Preemptible instances, Default value: Spot.'
                    type: string
                  description:
                    description: The description of the auto provisioning group.
                    type: string
                  excessCapacityTerminationPolicy:
                    description: 'The shutdown policy for excess preemptible instances
                      followed when the capacity of the auto provisioning group exceeds
                      the target capacity. Valid values: no-termination and termination,Default
                      value: no-termination.'
                    type: string
                  launchTemplateConfig:
                    description: DataDisk mappings to attach to ecs instance. See
                      block-config below for details.
                    items:
                      properties:
                        instanceType:
                          description: The instance type of the Nth extended configurations
                            of the launch template.
                          type: string
                        maxPrice:
                          description: The maximum price of the instance type specified
                            in the Nth extended configurations of the launch template.
                          type: string
                        priority:
                          description: The priority of the instance type specified
                            in the Nth extended configurations of the launch template.
                            A value of 0 indicates the highest priority.
                          type: string
                        vswitchId:
                          description: The ID of the VSwitch in the Nth extended configurations
                            of the launch template.
                          type: string
                        weightedCapacity:
                          description: The weight of the instance type specified in
                            the Nth extended configurations of the launch template.
                          type: string
                      type: object
                    type: array
                  launchTemplateId:
                    description: The ID of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  launchTemplateIdRef:
                    description: Reference to a LaunchTemplate in ecs to populate
                      launchTemplateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  launchTemplateIdSelector:
                    description: Selector for a LaunchTemplate in ecs to populate
                      launchTemplateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  launchTemplateVersion:
                    description: The version of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  maxSpotPrice:
                    description: The global maximum price for preemptible instances
                      in the auto provisioning group. If both the MaxSpotPrice and
                      LaunchTemplateConfig.N.MaxPrice parameters are specified, the
                      maximum price is the lower value of the two.
                    type: number
                  payAsYouGoAllocationStrategy:
                    description: 'The scale-out policy for pay-as-you-go instances.
                      Valid values: lowest-price and prioritized,Default value: lowest-price.'
                    type: string
                  payAsYouGoTargetCapacity:
                    description: The target capacity of pay-as-you-go instances in
                      the auto provisioning group.
                    type: string
                  spotAllocationStrategy:
                    description: 'The scale-out policy for preemptible instances.
                      Valid values:lowest-price and diversified,Default value: lowest-price.'
                    type: string
                  spotInstanceInterruptionBehavior:
                    description: 'The default behavior after preemptible instances
                      are shut down. Valid values: stop and terminate,Default value:
                      stop.'
                    type: string
                  spotInstancePoolsToUseCount:
                    description: This parameter takes effect when the SpotAllocationStrategy
                      parameter is set to lowest-price. The auto provisioning group
                      selects instance types of the lowest cost to create instances.
                    type: number
                  spotTargetCapacity:
                    description: The target capacity of preemptible instances in the
                      auto provisioning group.
                    type: string
                  terminateInstances:
                    description: 'Specifies whether to release instances of the auto
                      provisioning group. Valid values:false and true, default value:
                      false.'
                    type: boolean
                  terminateInstancesWithExpiration:
                    description: 'The shutdown policy for preemptible instances when
                      the auto provisioning group expires. Valid values: false and
                      true, default value: false.'
                    type: boolean
                  totalTargetCapacity:
                    description: The total target capacity of the auto provisioning
                      group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity
                      and the supplemental capacity besides PayAsYouGoTargetCapacity
                      and SpotTargetCapacity.
                    type: string
                  validFrom:
                    description: The time when the auto provisioning group is started.
                      The period of time between this point in time and the point
                      in time specified by the valid_until parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group is immediately started after creation.
                    type: string
                  validUntil:
                    description: The time when the auto provisioning group expires.
                      The period of time between this point in time and the point
                      in time specified by the valid_from parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group never expires.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autoProvisioningGroupName:
                    description: The name of the auto provisioning group to be created.
                      It must be 2 to 128 characters in length. It must start with
                      a letter but cannot start with http:// or https://. It can contain
                      letters, digits, colons (:), underscores (_), and hyphens (-)
                    type: string
                  autoProvisioningGroupType:
                    description: 'The type of the auto provisioning group. Valid values:request
                      and maintain,Default value: maintain.'
                    type: string
                  defaultTargetCapacityType:
                    description: 'The type of supplemental instances. When the total
                      value of PayAsYouGoTargetCapacity and SpotTargetCapacity is
                      smaller than the value of TotalTargetCapacity, the auto provisioning
                      group will create instances of the specified type to meet the
                      capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go
                      instances; Spot: Preemptible instances, Default value: Spot.'
                    type: string
                  description:
                    description: The description of the auto provisioning group.
                    type: string
                  excessCapacityTerminationPolicy:
                    description: 'The shutdown policy for excess preemptible instances
                      followed when the capacity of the auto provisioning group exceeds
                      the target capacity. Valid values: no-termination and termination,Default
                      value: no-termination.'
                    type: string
                  launchTemplateConfig:
                    description: DataDisk mappings to attach to ecs instance. See
                      block-config below for details.
                    items:
                      properties:
                        instanceType:
                          description: The instance type of the Nth extended configurations
                            of the launch template.
                          type: string
                        maxPrice:
                          description: The maximum price of the instance type specified
                            in the Nth extended configurations of the launch template.
                          type: string
                        priority:
                          description: The priority of the instance type specified
                            in the Nth extended configurations of the launch template.
                            A value of 0 indicates the highest priority.
                          type: string
                        vswitchId:
                          description: The ID of the VSwitch in the Nth extended configurations
                            of the launch template.
                          type: string
                        weightedCapacity:
                          description: The weight of the instance type specified in
                            the Nth extended configurations of the launch template.
                          type: string
                      type: object
                    type: array
                  launchTemplateId:
                    description: The ID of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  launchTemplateIdRef:
                    description: Reference to a LaunchTemplate in ecs to populate
                      launchTemplateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  launchTemplateIdSelector:
                    description: Selector for a LaunchTemplate in ecs to populate
                      launchTemplateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  launchTemplateVersion:
                    description: The version of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  maxSpotPrice:
                    description: The global maximum price for preemptible instances
                      in the auto provisioning group. If both the MaxSpotPrice and
                      LaunchTemplateConfig.N.MaxPrice parameters are specified, the
                      maximum price is the lower value of the two.
                    type: number
                  payAsYouGoAllocationStrategy:
                    description: 'The scale-out policy for pay-as-you-go instances.
                      Valid values: lowest-price and prioritized,Default value: lowest-price.'
                    type: string
                  payAsYouGoTargetCapacity:
                    description: The target capacity of pay-as-you-go instances in
                      the auto provisioning group.
                    type: string
                  spotAllocationStrategy:
                    description: 'The scale-out policy for preemptible instances.
                      Valid values:lowest-price and diversified,Default value: lowest-price.'
                    type: string
                  spotInstanceInterruptionBehavior:
                    description: 'The default behavior after preemptible instances
                      are shut down. Valid values: stop and terminate,Default value:
                      stop.'
                    type: string
                  spotInstancePoolsToUseCount:
                    description: This parameter takes effect when the SpotAllocationStrategy
                      parameter is set to lowest-price. The auto provisioning group
                      selects instance types of the lowest cost to create instances.
                    type: number
                  spotTargetCapacity:
                    description: The target capacity of preemptible instances in the
                      auto provisioning group.
                    type: string
                  terminateInstances:
                    description: 'Specifies whether to release instances of the auto
                      provisioning group. Valid values:false and true, default value:
                      false.'
                    type: boolean
                  terminateInstancesWithExpiration:
                    description: 'The shutdown policy for preemptible instances when
                      the auto provisioning group expires. Valid values: false and
                      true, default value: false.'
                    type: boolean
                  totalTargetCapacity:
                    description: The total target capacity of the auto provisioning
                      group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity
                      and the supplemental capacity besides PayAsYouGoTargetCapacity
                      and SpotTargetCapacity.
                    type: string
                  validFrom:
                    description: The time when the auto provisioning group is started.
                      The period of time between this point in time and the point
                      in time specified by the valid_until parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group is immediately started after creation.
                    type: string
                  validUntil:
                    description: The time when the auto provisioning group expires.
                      The period of time between this point in time and the point
                      in time specified by the valid_from parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group never expires.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.launchTemplateConfig is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.launchTemplateConfig)
                || (has(self.initProvider) && has(self.initProvider.launchTemplateConfig))'
            - message: spec.forProvider.totalTargetCapacity is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.totalTargetCapacity)
                || (has(self.initProvider) && has(self.initProvider.totalTargetCapacity))'
          status:
            description: AutoProvisioningGroupStatus defines the observed state of
              AutoProvisioningGroup.
            properties:
              atProvider:
                properties:
                  autoProvisioningGroupName:
                    description: The name of the auto provisioning group to be created.
                      It must be 2 to 128 characters in length. It must start with
                      a letter but cannot start with http:// or https://. It can contain
                      letters, digits, colons (:), underscores (_), and hyphens (-)
                    type: string
                  autoProvisioningGroupType:
                    description: 'The type of the auto provisioning group. Valid values:request
                      and maintain,Default value: maintain.'
                    type: string
                  defaultTargetCapacityType:
                    description: 'The type of supplemental instances. When the total
                      value of PayAsYouGoTargetCapacity and SpotTargetCapacity is
                      smaller than the value of TotalTargetCapacity, the auto provisioning
                      group will create instances of the specified type to meet the
                      capacity requirements. Valid values:PayAsYouGo: Pay-as-you-go
                      instances; Spot: Preemptible instances, Default value: Spot.'
                    type: string
                  description:
                    description: The description of the auto provisioning group.
                    type: string
                  excessCapacityTerminationPolicy:
                    description: 'The shutdown policy for excess preemptible instances
                      followed when the capacity of the auto provisioning group exceeds
                      the target capacity. Valid values: no-termination and termination,Default
                      value: no-termination.'
                    type: string
                  id:
                    description: The ID of the auto provisioning group
                    type: string
                  launchTemplateConfig:
                    description: DataDisk mappings to attach to ecs instance. See
                      block-config below for details.
                    items:
                      properties:
                        instanceType:
                          description: The instance type of the Nth extended configurations
                            of the launch template.
                          type: string
                        maxPrice:
                          description: The maximum price of the instance type specified
                            in the Nth extended configurations of the launch template.
                          type: string
                        priority:
                          description: The priority of the instance type specified
                            in the Nth extended configurations of the launch template.
                            A value of 0 indicates the highest priority.
                          type: string
                        vswitchId:
                          description: The ID of the VSwitch in the Nth extended configurations
                            of the launch template.
                          type: string
                        weightedCapacity:
                          description: The weight of the instance type specified in
                            the Nth extended configurations of the launch template.
                          type: string
                      type: object
                    type: array
                  launchTemplateId:
                    description: The ID of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  launchTemplateVersion:
                    description: The version of the instance launch template associated
                      with the auto provisioning group.
                    type: string
                  maxSpotPrice:
                    description: The global maximum price for preemptible instances
                      in the auto provisioning group. If both the MaxSpotPrice and
                      LaunchTemplateConfig.N.MaxPrice parameters are specified, the
                      maximum price is the lower value of the two.
                    type: number
                  payAsYouGoAllocationStrategy:
                    description: 'The scale-out policy for pay-as-you-go instances.
                      Valid values: lowest-price and prioritized,Default value: lowest-price.'
                    type: string
                  payAsYouGoTargetCapacity:
                    description: The target capacity of pay-as-you-go instances in
                      the auto provisioning group.
                    type: string
                  spotAllocationStrategy:
                    description: 'The scale-out policy for preemptible instances.
                      Valid values:lowest-price and diversified,Default value: lowest-price.'
                    type: string
                  spotInstanceInterruptionBehavior:
                    description: 'The default behavior after preemptible instances
                      are shut down. Valid values: stop and terminate,Default value:
                      stop.'
                    type: string
                  spotInstancePoolsToUseCount:
                    description: This parameter takes effect when the SpotAllocationStrategy
                      parameter is set to lowest-price. The auto provisioning group
                      selects instance types of the lowest cost to create instances.
                    type: number
                  spotTargetCapacity:
                    description: The target capacity of preemptible instances in the
                      auto provisioning group.
                    type: string
                  terminateInstances:
                    description: 'Specifies whether to release instances of the auto
                      provisioning group. Valid values:false and true, default value:
                      false.'
                    type: boolean
                  terminateInstancesWithExpiration:
                    description: 'The shutdown policy for preemptible instances when
                      the auto provisioning group expires. Valid values: false and
                      true, default value: false.'
                    type: boolean
                  totalTargetCapacity:
                    description: The total target capacity of the auto provisioning
                      group. The target capacity consists of the following three parts:PayAsYouGoTargetCapacity,SpotTargetCapacity
                      and the supplemental capacity besides PayAsYouGoTargetCapacity
                      and SpotTargetCapacity.
                    type: string
                  validFrom:
                    description: The time when the auto provisioning group is started.
                      The period of time between this point in time and the point
                      in time specified by the valid_until parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group is immediately started after creation.
                    type: string
                  validUntil:
                    description: The time when the auto provisioning group expires.
                      The period of time between this point in time and the point
                      in time specified by the valid_from parameter is the effective
                      time period of the auto provisioning group.By default, an auto
                      provisioning group never expires.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
